Require Import Coq.Lists.List.
Require Import ZArith.
Require Import Bits.

Open Scope Z_scope.

Notation " [ x , .. , y ] " := (cons x .. (cons y nil) ..).

Definition zs := [
     77, 90, 144, 0, 3, 0, 0, 0, 4, 0, 0, 0, 255, 255, 0, 0, 
     184, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 
     14, 31, 186, 14, 0, 180, 9, 205, 33, 184, 1, 76, 205, 33, 84, 104, 
     105, 115, 32, 112, 114, 111, 103, 114, 97, 109, 32, 99, 97, 110, 110, 111, 
     116, 32, 98, 101, 32, 114, 117, 110, 32, 105, 110, 32, 68, 79, 83, 32, 
     109, 111, 100, 101, 46, 13, 13, 10, 36, 0, 0, 0, 0, 0, 0, 0, 
     80, 69, 0, 0, 76, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 224, 0, 15, 3, 11, 1, 6, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 64, 16, 0, 0, 0, 16, 0, 0, 
     0, 32, 0, 0, 0, 0, 64, 0, 0, 16, 0, 0, 0, 2, 0, 0, 
     4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 
     0, 48, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 
     0, 0, 16, 0, 0, 16, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 
     0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     32, 32, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 72, 32, 0, 0, 20, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 46, 116, 101, 120, 116, 0, 0, 0, 
     216, 0, 0, 0, 0, 16, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 96, 
     46, 100, 97, 116, 97, 0, 0, 0, 176, 0, 0, 0, 0, 32, 0, 0, 
     0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 64, 0, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     85, 137, 229, 129, 236, 12, 0, 0, 0, 144, 184, 1, 0, 0, 0, 137, 
     69, 252, 184, 152, 55, 0, 0, 137, 69, 248, 139, 69, 252, 139, 77, 248, 
     1, 200, 137, 69, 244, 201, 195, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     85, 137, 229, 129, 236, 20, 0, 0, 0, 144, 184, 0, 0, 0, 0, 137, 
     69, 236, 184, 0, 0, 3, 0, 80, 184, 0, 0, 1, 0, 80, 232, 85, 
     0, 0, 0, 131, 196, 8, 184, 1, 0, 0, 0, 80, 232, 79, 0, 0, 
     0, 131, 196, 4, 141, 69, 236, 80, 184, 0, 0, 0, 0, 80, 141, 69, 
     244, 80, 141, 69, 248, 80, 141, 69, 252, 80, 232, 57, 0, 0, 0, 131, 
     196, 20, 139, 69, 244, 80, 139, 69, 248, 80, 139, 69, 252, 80, 232, 93, 
     255, 255, 255, 131, 196, 12, 137, 69, 240, 139, 69, 240, 80, 232, 30, 0, 
     0, 0, 131, 196, 4, 201, 195, 0, 255, 37, 72, 32, 64, 0, 0, 0, 
     255, 37, 76, 32, 64, 0, 0, 0, 255, 37, 80, 32, 64, 0, 0, 0, 
     255, 37, 84, 32, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     4, 32, 64, 0, 84, 79, 79, 46, 77, 65, 78, 89, 46, 71, 76, 79, 
     66, 65, 76, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     92, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 32, 0, 0, 
     72, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 123, 32, 0, 0, 136, 32, 0, 0, 
     153, 32, 0, 0, 169, 32, 0, 0, 0, 0, 0, 0, 123, 32, 0, 0, 
     136, 32, 0, 0, 153, 32, 0, 0, 169, 32, 0, 0, 0, 0, 0, 0, 
     109, 115, 118, 99, 114, 116, 46, 100, 108, 108, 0, 0, 0, 95, 99, 111, 
     110, 116, 114, 111, 108, 102, 112, 0, 0, 0, 95, 95, 115, 101, 116, 95, 
     97, 112, 112, 95, 116, 121, 112, 101, 0, 0, 0, 95, 95, 103, 101, 116, 
     109, 97, 105, 110, 97, 114, 103, 115, 0, 0, 0, 101, 120, 105, 116, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     4294967295].

Fixpoint zstois (l : list Z) : list int8 :=
   match l with
   | nil => nil
   | x::xs => (Word.repr x)::(zstois xs)
end.

Definition bytes := zstois zs.
